let g:alternateExtensions_{"m"} = "h"
let g:alternateExtensions_{"h"} = "c,cpp,m"

let g:alternateExtensions_{"ts"} = "js"
let g:alternateExtensions_{"js"} = "ts"

"set mp=make\ -s

nunmap <leader>x
nmap <leader>x :r!pbpaste<CR>

let c_no_trail_space_error = 1
let c_space_errors         = 0

set listchars=tab:>-,trail:%

"let g:netrw_list_hide .= ',\.js'

"set grepprg=ack\ --nogroup\ -H\ -k

autocmd! BufWritePre

"set uc=25 " more likely to crash, save often

autocmd BufRead,BufNewFile pentadactyl.txt set spell ft=mail|%s/ / /eg|norm gg
"autocmd FileType objc   set et ts=4 sw=4
"autocmd FileType objcpp set et ts=4 sw=4

" change cpp
"autocmd FileType cpp    set et ts=4 sw=4

"autocmd BufRead,BufNewFile pentadactyl.txt set spell ft=mail|%s/ / /eg|norm gg
autocmd FileType objc                   set et ts=4 sw=4
autocmd FileType objcpp                 set et ts=4 sw=4

autocmd FileType swift                  set et ts=4 sw=4

autocmd FileType python set noet ts=2 sw=2

autocmd BufRead,BufNewFile *.ts    set ft=typescript et ts=4 sw=4 complete=.,w,b,t,u suffixesadd=.ts,.js iskeyword-=: path+=Scripts/
autocmd BufRead,BufNewFile *.js    set suffixesadd=.js et ts=4 sw=4
autocmd BufRead,BufNewFile *.d.ts  set noequalalways winfixheight
autocmd BufRead,BufNewFile *.less,*.css  setl et ts=4 sw=4 iskeyword+=-,@,.

" ctags -f ~/.vim/inc.tags -R /usr/include/
set tags+=~/.vim/inc.tags

autocmd FileType typescript set tags=./tags,tags
autocmd FileType typescript nmap <buffer> <Leader>? :<C-u>echo tsuquyomi#hint()<CR>
let g:tsuquyomi_disable_quickfix = 1


set complete-=t

" disable spellcheck in reply lines:
"syn region reply start="^>" end="$" contains=@NoSpell

function! TsInterfaceAlt()
    if expand("%:t")[0] == "I"
        let l:without = expand("%:t")[1:]
        return expand("%:h") . "/" . l:without
    else
        return expand("%:h") . "/I" . expand("%:t")
    endif
endfunction

function! TsInterfaceToggle(command)
    let alt = TsInterfaceAlt()

    execute a:command . " " . l:alt
endfunction

autocmd FileType typescript
			\ command! TA call TsInterfaceToggle("edit")
			\ | command! TAS call TsInterfaceToggle("split")
			\ | command! TAV call TsInterfaceToggle("vsplit")

"-----------

function JsInterfaceAlt()
    if expand("%:e:e") == "spec.js"
        return expand("%:r:r") . ".js"
    else
        return expand("%:r") . ".spec.js"
    endif
endfunction

function JsSpecToggle(command)
    let alt = JsSpecAlt()
    execute a:command . " " . l:alt
endfunction

autocmd FileType javascript
			\ command! A call JsSpecToggle("edit")
			\ | command! AS call JsSpecToggle("split")
			\ | command! AV call JsSpecToggle("vsplit")
			\ | command! AT call JsSpecToggle("tabe")
